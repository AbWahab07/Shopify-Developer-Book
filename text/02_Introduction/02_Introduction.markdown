## A Brief History of Shopify Through a Developer's Eyes ##

My engineering career started professionally in 1990 at about the same the World Wide Web was invented with the introduction of HTTP protocol for the Internet. Before the use of HTTP was common the Internet was mainly used to exchange email (using SMTP), to post messages and have discussions on Usenet (using NNTP) or transferring binary and text files between clients and servers (using FTP). Archie, Veronica and Gopher were other interesting choices to use for searching documents. Once the Internet concept jumped across the early adopter chasm to be embraced by the dotcom businesses and general population, a flurry of changes ensued. Nortel had ramped up to make the Internet as fast and capable as is it today (and ironically crashed in the resulting process) and throngs of business people sitting on the sidelines with few clues about what to do with this vast network poured money into the foundations of what are today some of the most valuable business properties in the world. 

1998 was the year I transitioned my software development focus from R&D C and C++ development to Internet Computing. I recognized that one could craft very efficient programs with much less code using dynamic scripting languages, like Ruby, Python and PHP. If it took 25 lines of Java or C++ to put a button on the screen, Ruby or Tcl/Tk did it in one line. I was hooked on that concept. 

The early commercial Internet was all about established software titans showing off their chops. Coding for the web involved Microsoft ASP, Visual Studio and SQL Server to deliver web applications running on hugely energy inefficient Compaq Proliant servers. Other quirky technologies like Cold Fusion were often used too. Many friends and collegues have done what I have and hung out a shingle as an Internet computing engineer. Need a web enabled CRM? I can write you one. Need to manage your freight forwarding logistics company on the web? I can make you a web app for that. Need a website to sell flowers online? I can make you one. Need to send 50,000 emails to your world-wide employees? Got that covered. You have to interface to an EDI system with an AS/400 legacy database and a transactional web site? Let's do it. Ariba XML catalog to a SMB web site with an XML catalog of business pens and office equipment? Sure why not. 

In the early years of running your own business as a software engineering consultant or freelance programmer you, like me, will inevitably experience the pain of working capital shortages. You'll collect a cadre of loyal clients with small or tiny budgets. You cannot easily sell them anything from Microsoft, Oracle or most other enterprise technology companies. Try presenting a license acquisition cost of $22,000 for a database server for your SMB client. The world of proprietary and expensive software pushed me to drop all that and adopt Open Source Software as my toolkit. I started developing using Linux as my operating system, PHP as my server-side scripting language, and PostgreSQL as my database.

Ignoring Perl as a web app scripting language and adopting the new kid on the block PHP meant building out a CMS was best done with Drupal and E-Commerce for the masses with OSCommerce. There was very little Ruby or Python code for these endeavors so I hunkered down to try and fill my toolbox with the best tools that did not totally suck. Yahoo came out with their brilliant YUI framework and I jumped on that immediately for the nice documentation and functionalities it provided. Soon after a software developer named Jack Slocum came along and decided to extend YUI into his own vision of a framework. He called his version YUI-ext and quickly attracted a small but loyal following. His vision was to provide Grids (like excel), and Trees (like Windows explorer or Mac OS Finder), and dialog boxes, and toolbars and most of the widgets that we take for granted today but that were rare indeed back then. Eventually that code matured into it's own product called ExtJS that today is perhaps better known as Sencha. Shopify was born at about this period of time in my timeline. Just as Ruby on Rails was becoming the new kid on the block. 

PHP and Javascript were constantly evolving as were web browsers. As Microsoft oddly chose to stagnate with their now infamously bad IE web browser, Mozilla, Safari and Opera continued to extend web browser capabilities enough so that we could see realized the vision of web applications with enough sophistication to justify comparing them to native applications. Tools like Firebug and the Firefox browser, combined with Ajax (ironically a huge thanks to Microsoft for asynchronous Javascript) and the Ruby language offering introspection into a running Web App, developers now had something really hot to work with.

Shopify was being developed and released as a Beta service. I signed up as soon as the Beta was available, knowing I would be able to offer e-commerce to my clients, without having to hack PHP OSCommerce again. If you have never examined OSCommerce code, you are somewhat lucky. It was at best a spaghetti western in terms of code. Plus Shopify offered a hosted service, eliminating worries about security, backups and system administration tasks. Having to maintain my own Linux and Windows servers in a co-location facility over many years provided me with ample opportunities to freak out with the responsibilities of system administration tasks. How to SSH tunnel between boxes? How to best freak out when hard drives failed? How can RAID can be a source of mirror images of garbage?  How come hackers keep trying for years to break into my puny systems? How lousy is it to have to patch/upgrade services like Apache, PHP, Postfix, etc? Answer! Very much a lousy thing, at least for me. There is nothing like finding out a client's SSL certificate has expired, and I cannot exchange it for a new one without the password for the old one that is long forgotten and lost due to neglect. There is nothing quite like finding out the database has been failing to record certain entries for a few weeks due to a memory corruption bug. 
 
Shopify to the rescue! Hosted E-Commerce! No more headaches! Simple templating with Liquid, ability to do any Javascript I want! That is the pattern that works for me. Should work for almost anyone.